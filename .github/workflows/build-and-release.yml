name: Build & Release (CI + CD)

# Run CI on push/PR to main + manual dispatch.
# Release (CD) will run when you push a tag (refs/tags/v*.*.*).
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  # Keep builds reproducible
  CXXFLAGS: -O2

jobs:
  # Build for Windows (MSYS2) (runs on push/PR and tag)
  build-windows:
    name: Build (Windows)
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup MSYS2 and toolchain
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-openmp

      - name: Add mingw to PATH
        shell: bash
        run: |
          echo "/mingw64/bin" >> $GITHUB_PATH
          export PATH="/mingw64/bin:$PATH"
          which g++
          g++ --version

      - name: Build (g++)
        shell: bash
        run: |
          cd "$GITHUB_WORKSPACE"
          g++ -fopenmp ParallelCryptography.cpp -O2 -o parallel-cryptography-windows.exe
          ls -la parallel-cryptography-windows.exe

      - name: Upload windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: parallel-cryptography-windows
          path: parallel-cryptography-windows.exe

  # Release job â€” only runs when this workflow is triggered by a tag push
  create_release:
    name: Create Release & Attach Artifacts
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download linux artifact
        uses: actions/download-artifact@v4
        with:
          name: parallel-cryptography-linux
          path: ./artifacts

      - name: Download windows artifact
        uses: actions/download-artifact@v4
        with:
          name: parallel-cryptography-windows
          path: ./artifacts

      - name: List downloaded artifacts
        run: ls -la ./artifacts

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body: |
            Automated release built from tag ${{ github.ref_name }}.
            Built on: ${{ matrix.os || runner.os }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release assets
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          files: |
            ./artifacts/parallel-cryptography-linux
            ./artifacts/parallel-cryptography-windows.exe
